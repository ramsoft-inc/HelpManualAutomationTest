name: Enhanced Screenshot Automation

on:
  pull_request:
    types: [opened,reopened]

jobs:
  screenshots:
    runs-on: ubuntu-latest

    env:
      GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
      OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
      AZURE_OPENAI_API_KEY: ${{ secrets.AZURE_OPENAI_API_KEY }}
      AZURE_OPENAI_ENDPOINT: ${{ secrets.AZURE_OPENAI_ENDPOINT }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install Node.js dependencies
        run: npm ci
        working-directory: ./AutoSnap

      - name: Install Python dependencies
        run: pip install -r requirements.txt
        working-directory: ./AutoSnap

      - name: Install Node.js dependencies for Tracewright
        run: |
          cd AutoSnap/tracewrightt
          npm install

      - name: Get PR changes
        id: prdiff
        run: |
          git fetch origin ${{ github.event.pull_request.base.ref }}
          git diff --name-only origin/${{ github.event.pull_request.base.ref }}...${{ github.sha }} > changed_files.txt
          cat changed_files.txt

      - name: Check for docs markdown changes
        id: check_docs
        run: |
          echo "=== Checking for docs changes ==="
          grep -E '^docs/.*\.(md|mdx)$' changed_files.txt | xargs -I{} realpath {} > AutoSnap/docs_changed_files.txt || true
          if [ -s AutoSnap/docs_changed_files.txt ]; then
            echo "docs_changed=true" >> $GITHUB_OUTPUT
            echo "Docs markdown or mdx files found:"
            cat AutoSnap/docs_changed_files.txt
          else
            echo "docs_changed=false" >> $GITHUB_OUTPUT
            echo "No docs markdown or mdx files changed, skipping workflow"
          fi

      - name: Detect scenario type (new_feature or ui_change)
        id: detect_mode
        if: steps.check_docs.outputs.docs_changed == 'true'
        run: |
          if grep -E 'placeholder for a screenshot' AutoSnap/docs_changed_files.txt -iq; then
            echo "mode=new_feature" >> $GITHUB_OUTPUT
          else
            echo "mode=ui_change" >> $GITHUB_OUTPUT
          fi

      - name: Run enhanced screenshot script for each file
        if: steps.check_docs.outputs.docs_changed == 'true'
        run: |
          while IFS= read -r file; do
            node enhanced-run-script.js --mode ${{ steps.detect_mode.outputs.mode }} --changed-files "$file"
          done < docs_changed_files.txt
        working-directory: ./AutoSnap 