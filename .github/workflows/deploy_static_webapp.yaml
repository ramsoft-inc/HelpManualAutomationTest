name: Deploy static webapp
on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest #[self-hosted, linux] #
    name: 'Deploy static webapp'
    concurrency:
      group: ci-pipeline-master
      cancel-in-progress: false

    steps:
      - uses: actions/checkout@v4.1.7

      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
      - name: Install yarn
        run: npm install -g yarn
      - name: Install dependencies
        run: yarn install
      - name: Build Help Manual
        run: yarn run build

      - name: Check and Install Azure CLI
        run: |
            if ! command -v az &> /dev/null; then
              echo "Azure CLI not found. Installing..."
              apt-get update
              apt-get install -y ca-certificates curl apt-transport-https lsb-release gnupg
              curl -sL https://packages.microsoft.com/keys/microsoft.asc | gpg --dearmor | sudo tee /usr/share/keyrings/microsoft-azure-cli.gpg > /dev/null
              echo "deb [arch=amd64 signed-by=/usr/share/keyrings/microsoft-azure-cli.gpg] https://packages.microsoft.com/repos/azure-cli/ $(lsb_release -cs) main" | sudo tee /etc/apt/sources.list.d/azure-cli.list
              apt-get update
              apt-get install -y azure-cli
            else
              echo "Azure CLI is already installed."
            fi
    
      - name: Verify Azure CLI Installation
        run: az --version

      - name: Azure login
        env:
          AZURE_USERNAME: ${{ secrets.AZURE_USERNAME }}
          AZURE_PASSWORD: ${{ secrets.AZURE_PASSWORD }}
          AZURE_TENANT_ID: ${{ secrets.AZURE_TENANT }} 
        run: |

            az login -u $AZURE_USERNAME -p $AZURE_PASSWORD --tenant $AZURE_TENANT_ID -o none
            az account set --subscription 6b953fbc-42c0-40da-b8f1-8c5a99beaf8d

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2.0.3
        with:
          terraform_version: 1.8.4
      
      - name: Terraform
        run: |
            terraform init --var-file="env.tfvars" 
            terraform plan --var-file="env.tfvars" -out="terraform_plan.tfplan"
            terraform apply "terraform_plan.tfplan"

        working-directory: ./terraform

      - name: static app deploy
        env:
          HELPMANUALRG: po-shared
          AZURE_STORAGE_ACCOUNT_1: posharedhelpmanual01
          AZURE_STORAGE_ACCOUNT_2: posharedhelpmanual02
        
        run: |

            AZURE_STORAGE_KEY_1=$(az storage account keys list --resource-group $HELPMANUALRG --account-name $AZURE_STORAGE_ACCOUNT_1  --query "[].value" -o tsv)
            AZURE_STORAGE_KEY_2=$(az storage account keys list --resource-group $HELPMANUALRG --account-name $AZURE_STORAGE_ACCOUNT_2  --query "[].value" -o tsv)

            TAG_1=$(az storage account show -g $HELPMANUALRG -n $AZURE_STORAGE_ACCOUNT_1 --query "tags.status || 'deactivated'" -o tsv)
            TAG_2=$(az storage account show -g $HELPMANUALRG -n $AZURE_STORAGE_ACCOUNT_2 --query "tags.status || 'deactivated'" -o tsv)


            if [[ "$TAG_1" == "deactivated" ]]; then
              TARGET_STORAGE_ACCOUNT="$AZURE_STORAGE_ACCOUNT_1"
              TARGET_STORAGE_KEY="$AZURE_STORAGE_KEY_1"
              NEXT_ACTIVE_ACCOUNT="$AZURE_STORAGE_ACCOUNT_2"
            else
              TARGET_STORAGE_ACCOUNT="$AZURE_STORAGE_ACCOUNT_2"
              TARGET_STORAGE_KEY="$AZURE_STORAGE_KEY_2"
              NEXT_ACTIVE_ACCOUNT="$AZURE_STORAGE_ACCOUNT_1"
            fi

            
            cat <<EOF >> $GITHUB_ENV
            TARGET_STORAGE_ACCOUNT=$TARGET_STORAGE_ACCOUNT
            TARGET_STORAGE_KEY=$TARGET_STORAGE_KEY
            NEXT_ACTIVE_ACCOUNT=$NEXT_ACTIVE_ACCOUNT
            EOF

      
            echo "Environment variables set successfully"
            echo "TARGET_STORAGE_ACCOUNT:$TARGET_STORAGE_ACCOUNT"
            echo "NEXT_ACTIVE_ACCOUNT:$NEXT_ACTIVE_ACCOUNT"

            az storage blob upload-batch --account-name "$TARGET_STORAGE_ACCOUNT" --account-key "$TARGET_STORAGE_KEY" --source ./build --destination '$web' --overwrite

            az storage account update --name $TARGET_STORAGE_ACCOUNT --set tags.status=activated
            az storage account update --name $NEXT_ACTIVE_ACCOUNT --set tags.status=deactivated 

            STORAGE_ENDPOINT=$(az storage account show \
              --name $TARGET_STORAGE_ACCOUNT \
              --query "primaryEndpoints.web" -o tsv)

            echo "static endpoint:$STORAGE_ENDPOINT"

            echo "STATIC_STORAGE_ENDPOINT=$STORAGE_ENDPOINT" >> $GITHUB_ENV

      - name: Update Azure Front Door Backend Pool
        env:
          AZURE_SUBSCRIPTION_ID: "f164f104-f8a2-41dc-acf0-612199ae83ed"
          RESOURCE_GROUP: "RG-SCUS-FD"
          FRONT_DOOR_NAME: "omegaai-us-global"
          ENDPOINT: ${{ env.STATIC_STORAGE_ENDPOINT }}
        run: |
          az config set extension.dynamic_install_allow_preview=true

          az account set --subscription $AZURE_SUBSCRIPTION_ID

          FQDN=$(echo "$ENDPOINT" | sed 's|https://||;s|/$||')

          echo "FQDN:$FQDN"
          
          echo "before updating the front door backend pool"
          az afd origin list --profile-name "$FRONT_DOOR_NAME" --origin-group-name "help" --resource-group "$RESOURCE_GROUP"
        
          az afd origin update \
            --profile-name "$FRONT_DOOR_NAME" \
            --name "help-1" \
            --origin-group-name "help" \
            --resource-group "$RESOURCE_GROUP" \
            --host-name "$FQDN" \
            --origin-host-header "$FQDN"

          echo "after updating the front door backend pool"
          az afd origin list --profile-name "$FRONT_DOOR_NAME" --origin-group-name "help" --resource-group "$RESOURCE_GROUP"
